
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <vector>
using std::cout, std::cin, std::endl;

int main()
{
	//this sequence will start at 1
    //i will use vectors
    unsigned long first = 1,
    second = 2,
    sum = 0;
    int SIZE = 100000;

    unsigned long fib[SIZE];
    fib[0] = first;
    fib[1] = second;
    cout << first << " " << second << " ";

    //since 2 % 2 == 0 add it to sum now
    sum += second;

    for (int i = 2; i < SIZE; ++i)
    {
        if(fib[i] >= 4000000)
            break;

        fib[i] = first + second;   //if i = 2, fib[i] = 1 + 2 = 3
        first = fib[i-1];  //if i = 2, first is now 2 or fib[1]
        second = fib[i]; //if i = 2, second = 3 or fib[2] 
        
        if (fib[i] % 2 == 0)
            sum += fib[i];

        //cout << second << " ";        
    }

    cout << endl << sum << " ";
    

}