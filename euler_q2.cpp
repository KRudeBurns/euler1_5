
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <vector>
using std::cout, std::cin, std::endl;

void q2()
{
        unsigned long num1 = 0, num2 = 0, sum = 0, i = 0;
        std::vector<unsigned long> sequence;
        std::vector<unsigned long> even_sequence;
        
        while (num2 <= 4000000)
        {
            cout << "i = " << i << "\n";
            cout << "Num1 = " << num1 << "\n";
            cout << "Num2 = " << num2 << "\n";
        
	        if (num1 % 2 == 0)
            {
                cout << num1 << " is even and added to the sum\n";
                sum += num1;
                even_sequence.push_back(num1);
            }
		    cout << "======================================\n";    
	    
            if (i == 0)
            {
            num1 = 0, num2 = 0;
            }
        
            if (i == 1)
            {
                num2 = 1;
                num1 = 0;
            }
        
            num2 = num2+num1;      //y1 = y0 + x0
		    num1 = num2 - num1;    //x1 = y0 = y1 - x0
		
            sequence.push_back(num1);
            ++i;		
	    }

	    cout << "index size = " << i;	

        //print the fib sequence
        cout << "\nThe fibonacci sequence is below: \n";
        for (int x : sequence)
        {
            std::cout << x << " ";
        }

        //print the even fib sequence
        cout << "\n\nThe even fibonacci sequence is below: \n";
        for (int y : even_sequence)
        {
            std::cout << y << " ";
        }

        //print the sum
        cout << "\nThe sum is: " << sum << "\n";
}

int main()
{
	
    q2();
}

